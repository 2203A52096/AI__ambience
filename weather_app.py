# -*- coding: utf-8 -*-
"""weather_app.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/12ILnLnnKhd6oIT9ONxLZTFQXlwXjWqiI
"""
import matplotlib.pyplot as plt
import seaborn as sns
import streamlit as st
import pandas as pd
import numpy as np
import os
import pickle  
import random

st.set_page_config(page_title="ClimAIte", page_icon="☀️", layout="wide")

@st.cache_data
def load_data():
    file_path = "seattle-weather.csv"
    if not os.path.exists(file_path):
        st.error(f"Dataset not found: {file_path}. Please upload the dataset.")
        return None
    return pd.read_csv(file_path)

df = load_data()

if df is None:
    st.stop() 

@st.cache_resource
def load_model():
    with open("model.pkl", "rb") as model_file:
        model = pickle.load(model_file)
    return model

model = load_model()
weather_mapping = {0: "Sun", 1: "Snow", 2: "Rain", 3: "Drizzle", 4: "Fog"}

weather_jokes = [
    "Why did the sun go to school? To get a little brighter! ☀️",
    "What does a cloud wear under his raincoat? Thunderwear! ⛈️",
    "What happens when it rains cats and dogs? You might step in a poodle! 🐶",
    "Why did the tornado break up with the hurricane? Because it needed some space! 🌪️",
    "How does a snowman get around? By riding an ‘icicle’! ⛄"
]

def get_random_joke():
    return random.choice(weather_jokes)

st.sidebar.title("Navigation")
page = st.sidebar.radio("Go to", ["Home", "Prediction", "Recommendations"])

if page == "Home":
    st.title("🌍 Welcome to ClimAIte")
    st.markdown(
        """
        <h3 style='text-align: center;'>Your AI-powered climate prediction assistant! ❄️🌤️☔</h3>
        <p style='text-align: center; font-size: 18px;'>Helping you plan ahead for any weather condition.</p>
        """, unsafe_allow_html=True)
    
    st.markdown(
        """
        **Why Climate Prediction Matters:**
        - Helps farmers prepare for changing weather conditions.  
        - Assists policymakers in environmental planning.  
        - Supports businesses in mitigating weather-related risks.  
        """
    )
    
    st.image("climate_image.png", width=400)
    
    st.subheader("🌞 Fun Fact")
    if st.button("Click for a Weather Joke!"):
        st.markdown(f"**{get_random_joke()}**")

elif page == "Prediction":
    st.title("🔮 Climate Prediction")
    st.write("Enter weather conditions to predict the category of the climate.")
    temp_max = st.slider("Max Temperature (°C)", df["temp_max"].min(), df["temp_max"].max(), df["temp_max"].median())
    temp_min = st.slider("Min Temperature (°C)", df["temp_min"].min(), df["temp_min"].max(), df["temp_min"].median())
    precipitation = st.number_input("Precipitation (mm)", df["precipitation"].min(), df["precipitation"].max(), df["precipitation"].median())
    wind = st.number_input("Wind Speed (km/h)", df["wind"].min(), df["wind"].max(), df["wind"].median())
    input_data = [[precipitation, temp_max, temp_min, wind]]
    if st.button("Predict"):
        prediction = model.predict(input_data)[0]
        st.success(f"Predicted Weather: **{weather_mapping.get(prediction, 'Unknown')}**")

elif page == "Recommendations":
    st.title("👕🍲 Clothing & Food Recommendations")
    weather_choice = st.selectbox("Select Weather Condition", list(weather_mapping.values()))
    st.subheader("👕 Clothing Recommendation")
    st.write("\n\n**Men:**")
    st.write("- Outfit 1: T-shirt with shorts and sneakers")
    st.write("- Outfit 2: Polo shirt with lightweight chinos and loafers")
    st.write("\n\n**Women:**")
    st.write("- Outfit 1: Sundress with sandals")
    st.write("- Outfit 2: Tank top with shorts and sneakers")
    
    st.subheader("🍲 Food Recommendation")
    st.write(
        "\n**Recommended meals:**\n"
        "- Fresh fruit salads with watermelon, mango, and berries\n"
        "- Cold sandwiches with grilled chicken, avocado, and lettuce\n"
        "- Yogurt parfaits with granola and honey\n"
        "- Smoothies with banana, spinach, and almond milk\n"
        "- Grilled vegetables with lean protein like chicken or fish"
    )
